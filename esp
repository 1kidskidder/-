local ESP = false

local Settings = {
    Box_Color = Color3.fromRGB(255, 255, 255),
    Box_Thickness = 1.5,
    Glow_Color = Color3.fromRGB(255, 182, 193),
    Glow_Thickness = 2,
    Name_Color = Color3.fromRGB(216, 191, 216),
    Distance_Color = Color3.fromRGB(216, 191, 216),
    HealthBar_Color = Color3.fromRGB(0, 255, 0),
    HealthText_Color = Color3.fromRGB(255, 255, 255),
    Max_Distance = 200
}

local player = game:GetService("Players").LocalPlayer
local camera = game:GetService("Workspace").CurrentCamera

local function NewQuad(thickness, color, filled)
    local quad = Drawing.new("Quad")
    quad.Visible = true
    quad.PointA = Vector2.new(0, 0)
    quad.PointB = Vector2.new(0, 0)
    quad.PointC = Vector2.new(0, 0)
    quad.PointD = Vector2.new(0, 0)
    quad.Color = color
    quad.Filled = filled
    quad.Thickness = thickness
    return quad
end

local function NewLine(thickness, color)
    local line = Drawing.new("Line")
    line.Visible = true
    line.From = Vector2.new(0, 0)
    line.To = Vector2.new(0, 0)
    line.Color = color 
    line.Thickness = thickness
    return line
end

local function NewText(color, text)
    local label = Drawing.new("Text")
    label.Visible = true
    label.Size = 14
    label.Color = color
    label.Text = text
    label.Center = true
    label.Outline = true
    label.OutlineColor = Color3.fromRGB(0, 0, 0)
    return label
end

local function Visibility(state, lib)
    for _, x in pairs(lib) do
        x.Visible = state
    end
end

local function ESP(plr)
    local library = {
        glow = NewQuad(Settings.Glow_Thickness, Settings.Glow_Color, true),
        box = NewQuad(Settings.Box_Thickness, Settings.Box_Color, true),
        healthbar = NewLine(3, Color3.fromRGB(0, 0, 0)),
        greenhealth = NewLine(1.5, Settings.HealthBar_Color),
        nameLabel = NewText(Settings.Name_Color, plr.Name),
        distanceLabel = NewText(Settings.Distance_Color, ""),
        healthLabel = NewText(Settings.HealthText_Color, ""),
    }

    local function Updater()
        local connection
        connection = game:GetService("RunService").RenderStepped:Connect(function()
            if not ESP then
                Visibility(false, library)
                return
            end

            if plr.Character and plr.Character:FindFirstChild("Humanoid") and plr.Character:FindFirstChild("HumanoidRootPart") and plr.Character.Humanoid.Health > 0 then
                local distanceToPlayer = (plr.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).magnitude
                
                if distanceToPlayer <= Settings.Max_Distance then
                    local HumPos, OnScreen = camera:WorldToViewportPoint(plr.Character.HumanoidRootPart.Position)
                    if OnScreen then
                        local headPos = camera:WorldToViewportPoint(plr.Character.Head.Position)
                        local DistanceY = math.clamp((Vector2.new(headPos.X, headPos.Y) - Vector2.new(HumPos.X, HumPos.Y)).magnitude, 2, math.huge)

                        local function Size(item)
                            item.PointA = Vector2.new(HumPos.X + 3.75, HumPos.Y - 2.75)
                            item.PointB = Vector2.new(HumPos.X - 3.75, HumPos.Y - 2.75)
                            item.PointC = Vector2.new(HumPos.X - 3.75, HumPos.Y + 2.75)
                            item.PointD = Vector2.new(HumPos.X + 3.75, HumPos.Y + 2.75)
                        end

                        Size(library.glow)
                        Size(library.box)

                        library.nameLabel.Position = Vector2.new(HumPos.X, HumPos.Y - 2.75 - 20)

                        library.distanceLabel.Text = math.floor(distanceToPlayer) .. " studs"
                        library.distanceLabel.Position = Vector2.new(HumPos.X, HumPos.Y + 2.75 + 10)

                        local d = (Vector2.new(HumPos.X - 3.75, HumPos.Y - 2.75) - Vector2.new(HumPos.X - 3.75, HumPos.Y + 2.75)).magnitude 
                        local healthoffset = plr.Character.Humanoid.Health / plr.Character.Humanoid.MaxHealth * d

                        library.greenhealth.From = Vector2.new(HumPos.X - 3.75 - 4, HumPos.Y + 2.75)
                        library.greenhealth.To = Vector2.new(HumPos.X - 3.75 - 4, HumPos.Y + 2.75 - healthoffset)

                        library.healthbar.From = Vector2.new(HumPos.X - 3.75 - 4, HumPos.Y + 2.75)
                        library.healthbar.To = Vector2.new(HumPos.X - 3.75 - 4, HumPos.Y - 2.75)

                        library.healthLabel.Text = "HP: " .. math.floor(plr.Character.Humanoid.Health)
                        library.healthLabel.Position = Vector2.new(HumPos.X + 3.75 + 4, HumPos.Y - 2.75)

                        Visibility(true, library)
                    else 
                        Visibility(false, library)
                    end
                else
                    Visibility(false, library)
                end
            else 
                Visibility(false, library)
                if game.Players:FindFirstChild(plr.Name) == nil then
                    connection:Disconnect()
                end
            end
        end)
    end
    coroutine.wrap(Updater)()
end

for i, v in pairs(game:GetService("Players"):GetPlayers()) do
    if v.Name ~= player.Name then
        coroutine.wrap(ESP)(v)
    end
end

game.Players.PlayerAdded:Connect(function(newplr)
    if newplr.Name ~= player.Name then
        coroutine.wrap(ESP)(newplr)
    end
end)

